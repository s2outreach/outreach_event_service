spring.application.name=eventserver
eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
spring.cloud.config.discovery.enabled=true
spring.main.allow-bean-definition-overriding=true
server.port=${EVENT_PORT:2222}

#aws dynamodb config
amazon.end-point.url=${AWS_DYNAMODB_ENDPOINT:http://localhost:8000}
amazon.region=${AWS_DYNAMODB_REGION:}
amazon.access.key=${AWS_DYNAMODB_ACCESS_KEY:}
amazon.access.secret-key=${AWS_DYNAMODB_SECRET_KEY:}

#kafka config
spring.kafka.producer.bootstrap-servers=${KAFKASERVER:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.add-log=addlog
kafka.group-id=group-id

#mysql config
spring.datasource.url=${DATASOURCEURL:jdbc:mysql://localhost:3306/outreach?useSSL=false}
spring.datasource.username=${DBUSER:root}
spring.datasource.password=${DBPASSWORD:pass@word1}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

#sonar config
sonar.jdbc.dialect=mysql
sonar.projectKey=com.cognizant.outreach:outreach_event_service
sonar.projectName=com.cognizant.outreach:outreach_event_service
sonar.projectVersion=1.0
sonar.sources=src
sonar.language=java
sonar.binaries=build/classes
sonar.tests=junit
sonar.dynamicAnalysis=reuseReports
sonar.junit.reportsPath=build/test-reports
sonar.java.coveragePlugin=jacoco
sonar.jacoco.reportPath=build/test-reports/jacoco.exec
